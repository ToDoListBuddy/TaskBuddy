@page
@model TaskBuddy.Pages.StatsModel
@{
}
@{
    ViewData["Title"] = "Stats";
}
<h1>Stats <3</h1>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load("current", { packages: ["corechart"] });
    google.charts.setOnLoadCallback(drawChart);
    function drawChart() {
        var data = google.visualization.arrayToDataTable([
            ['TaskType', 'Number'],
            ['CompletedTasks', @Model.completedTaskCount],
            ['IncompletedTasks', @Model.incompletedTaskCount]
        ]);

        var options = {
            title: 'Current status for tasks',
            is3D: true,
        };

        var chart = new google.visualization.PieChart(document.getElementById('piechart_3d'));
        chart.draw(data, options);
    }
</script>
<div id="piechart_3d" style="width: 900px; height: 500px;"></div>
<p>*Completed tasks:@Model.completedTaskCount  out of @Model.allTaskCount total tasks => @Model.procentajCompleted % complition</p>
<table class="table">
    <caption>Completed tasks</caption>
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Taskuri[0].Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Taskuri[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Taskuri[0].Priority)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.Taskuri[0].CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Taskuri[0].DeadLine)
            </th>
            @*             <th>
            @Html.DisplayNameFor(model => model.Taskuri[0].IsCompleted)
            </th> *@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Taskuri)
        {
            @if (item.IsCompleted == true)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Priority)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeadLine)
                    </td>
                    @*             <td>
            @Html.DisplayFor(modelItem => item.IsCompleted)
            </td> *@
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }}
    </tbody>
</table>
<p>*Uncompleted tasks: @Model.incompletedTaskCount out of @Model.allTaskCount total tasks => @Model.procentajIncompleted % incomplition</p>
<table class="table">
    <caption>Uncompleted tasks</caption>
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Taskuri[0].Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Taskuri[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Taskuri[0].Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Taskuri[0].CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Taskuri[0].DeadLine)
            </th>
            @*             <th>
            @Html.DisplayNameFor(model => model.Taskuri[0].IsCompleted)
            </th> *@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Taskuri)
        {
            @if (item.IsCompleted == false)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Priority)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeadLine)
                    </td>
                    @*             <td>
            @Html.DisplayFor(modelItem => item.IsCompleted)
            </td> *@
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }}
    </tbody>
</table>
